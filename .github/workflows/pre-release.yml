name: pre-release

on: pull_request


jobs:

  build:
    
    name: builds docker image
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.version-generator.outputs.version }}
      
    steps:
    
     - uses: actions/checkout@v3
    
     - name: Login to DockerHub
       uses: docker/login-action@v2
       with:
        username: ${{ secrets.DOCKERHUB_SAMPLES_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SAMPLES_PASSWORD }}
        
     - name: Set Version Number

       id: version-generator
       run: echo "version=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER-alpha" >> $GITHUB_OUTPUT
        
     - name: Build OctoPetShop web container
       run: |    
        docker build ./OctopusSamples.OctoPetShop.Web --file ./OctopusSamples.OctoPetShop.Web/dockerfile --tag octopussamples/octopetshop-web-ndc:${{ steps.version-generator.outputs.version }}
        docker push octopussamples/octopetshop-web-ndc:${{ steps.version-generator.outputs.version }}
      
        
        
  Push-build-information:
       
      name: Push Build Information üêô
      needs: build 
      runs-on: ubuntu-latest
      
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
      

      steps:
      - uses: OctopusDeploy/push-build-information-action@v3
        name: Push Build Information
        with:
          version: ${{ needs.build.outputs.version }}
          packages: octopussamples/octopetshop-web-ndc
          overwrite_mode: OverwriteExisting
          
  Create-Octopus-Release:
  
      name: Create Octopus Release üêô
      needs: [build, Push-build-information]
      runs-on: ubuntu-latest
      
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
        
      steps:
      - uses: OctopusDeploy/create-release-action@v3
        id: "create-release"
        with:
          project: POS Client
          channel: Alpha
      outputs: 
       release_number: ${{ steps.create-release.outputs.release_number }}
          
  Create-deploy-Release:
  
      name: Deploy Octopus Release üêô
      needs: [build, Push-build-information, Create-Octopus-Release]
      runs-on: ubuntu-latest
      
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
      
      steps:
      - uses: OctopusDeploy/deploy-release-action@v3.0.1
        id: "queue_deployments"
        with:
          project: POS Client
          release_number: ${{ needs.create-octopus-release.outputs.release_number }}
          environments: |
            development
            
      - name: Waiting for 1st deployment in Octopus Deploy üêô
        uses: OctopusDeploy/await-task-action@v3
        with:
          server_task_id: ${{ fromJson(steps.queue_deployments.outputs.server_tasks)[0].serverTaskId }}
          
          
          
            
            

        

      
        
        
      
      
             
         
  
        

      
   
